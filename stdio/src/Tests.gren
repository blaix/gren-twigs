module Tests exposing (main)

import Expect
import Fuzz exposing (string, int)
import Test exposing (describe, test, fuzz)
import Test.Runner.Node exposing (Program, run)
import Palindrome


main : Program
main =
    run <|
        describe "Palindrome.check"
            [ test "true if string is a palindrome" <| \_ ->
                Palindrome.check "bob"
                    |> Expect.equal True
            , test "false if string is not a palindrome" <| \_ ->
                Palindrome.check "justin"
                    |> Expect.equal False
            , test "handles capitalization" <| \_ ->
                Palindrome.check "Bob"
                    |> Expect.equal True
            , test "handles punctuation" <| \_ ->
                Palindrome.check "Madam, I'm Adam."
                    |> Expect.equal True
            , fuzz string "forced palindromes" <| \s ->
                s ++ String.reverse s
                    |> Palindrome.check
                    |> Expect.equal True
            , fuzz int "forced non-palindromes" <| \i ->
                String.fromInt i ++ String.fromInt (i + 1)
                    |> Palindrome.check
                    |> Expect.equal False
            ]
